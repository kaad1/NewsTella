@using NewsTella.Models
@using NewsTella.Services
@inject IArticlesService articleService
@inject ICategoryService categoryService

@{
	var latestArticle = articleService.GetLatestArticle();
}


<style>
	.breaking-news-wrapper {
		padding: 0 18px;
		margin-bottom: 24px !important;
		padding-top: 14px !important;
	}

	.breaking-news-inner {
		display: flex;
		align-items: center;
		position: relative;
		-webkit-transform: translate3d(0, 0, 0);
		transform: translate3d(0, 0, 0);
		overflow: hidden;
	}

	.breaking-news-title {
		font-family: Rubik !important;
		font-size: 18px !important;
		font-weight: 400 !important;
		letter-spacing: .6px !important;
		background-color: #e41b13;
		color: #fff;
		text-transform: uppercase;
		padding: 5px 10px;
		display: inline-block;
		line-height: 22px;
	}

	.breaking-news-display {
		display: flex;
		align-items: center;
		vertical-align: top;
		padding: 0 0 0 15px;
	}

	.breaking-news-headline {
		font-size: 15px;
		line-height: 32px;
		margin: 0;
		word-wrap: break-word;
	}

	
</style>

<div class="container container-rm-margin container-rework">
	<div class="breaking-news-wrapper">		
		<div class="breaking-news-inner">
			<div class="breaking-news-title">Breaking News</div>
			<div class="breaking-news-display" id="breaking-news">

			</div>
		</div>
	</div>
</div>

<div class="container container-rm-margin container-rework">
	<div class="row row-margin">
		@if (latestArticle != null)
		{
			<div class="col-sm-12 col-md-6 col-lg-7 col-margin">				
				<div class="d-flex flex-column">	
					<div class="front-img-container">
						@if (!string.IsNullOrEmpty(latestArticle.ImageLink))
						{
							<div class="front-img" style="background-image: url('@latestArticle.ImageLink');"></div>							
						}
					</div>
				<div class="article-section">
						@if (latestArticle.Categories.Any())
						{
							var category = latestArticle.Categories.First();
							<a class="category-link icon-link icon-link-hover" asp-controller="Categories" asp-action="Articles" asp-route-categoryId="@category.Id">@category.Name</a>							
						}
						<h3 class="article-heading" title="@latestArticle.Headline">
							<a asp-controller="Article" asp-action="Details" asp-route-id="@latestArticle.Id">@latestArticle.Headline</a>
						</h3>
						<div class="article-paragraph">@latestArticle.ContentSummary</div>
				</div>
				</div>
			</div>
		}
		else
		{
			<p>No latest published article found.</p>
		}
		<div class="col-sm-12 col-md-6 col-lg-5 tab-sm">
				<div class="tab-wrapper">

				
				<ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
					<li class="nav-item tab-item" role="presentation">
						<button class="nav-link active" id="pills-home-tab" data-bs-toggle="pill" data-bs-target="#pills-latest" type="button" role="tab" aria-controls="pills-latest" aria-selected="true">Latest</button>
					</li>
					<li class="nav-item tab-item" role="presentation">
						<button class="nav-link" id="pills-profile-tab" data-bs-toggle="pill" data-bs-target="#pills-editors" type="button" role="tab" aria-controls="pills-editors" aria-selected="false">Editor's Choice</button>
					</li>
					<li class="nav-item tab-item" role="presentation">
						<button class="nav-link" id="pills-contact-tab" data-bs-toggle="pill" data-bs-target="#pills-popular" type="button" role="tab" aria-controls="pills-popular" aria-selected="false">Most Popular</button>
					</li>
				</ul>
				<div class="tab-content" id="pills-tabContent">
					<div class="tab-pane fade show active" id="pills-latest" role="tabpanel" aria-labelledby="pills-latest-tab" tabindex="0">
						@await Component.InvokeAsync("LatestArticle", new { count = 6 })
					</div>
					<div class="tab-pane fade" id="pills-editors" role="tabpanel" aria-labelledby="pills-editors-tab" tabindex="0">
						@await Component.InvokeAsync("ECArticle", new { count = 6 })
					</div>
					<div class="tab-pane fade" id="pills-popular" role="tabpanel" aria-labelledby="pills-popular-tab" tabindex="0">
						@await Component.InvokeAsync("PopularArticle", new { count = 6 })
					</div> 
				</div>
			</div>
		</div>
	</div>
</div>	

@section Scripts {
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const breakingNewsContainer = document.getElementById('breaking-news');
			let articles = [];
			let currentIndex = 0;

			function fetchBreakingNews() {
				fetch('/Home/GetBreakingNews')
					.then(response => response.json())
					.then(data => {
						articles = data;
						currentIndex = 0;
						displayArticle();
					})
					.catch(error => console.error('Error fetching breaking news:', error));
			}

			function displayArticle() {
				if (articles.length > 0) {
					const article = articles[currentIndex];
					breakingNewsContainer.innerHTML = `<div class="headline"><h2 class="breaking-news-headline"><a href="/Article/Details/${article.id}">${article.headline}</a></h2></div>`;
					currentIndex = (currentIndex + 1) % articles.length;
				}
			}

			
			fetchBreakingNews();

			
			//setInterval(displayArticle, 5000);

			
			setInterval(fetchBreakingNews, 300000);
		});
	</script>
}

